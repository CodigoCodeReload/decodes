{
  "info": {
    "_postman_id": "1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p",
    "name": "Pica Game Timer API",
    "description": "API collection for testing the Pica Game Timer system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"player1\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "register"
              ]
            },
            "description": "Register a new user in the system"
          },
          "response": []
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"player1\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "login"
              ]
            },
            "description": "Login an existing user or auto-register if user doesn't exist"
          },
          "response": []
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/users",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "auth",
                "users"
              ]
            },
            "description": "Get a list of all registered users (for testing purposes)"
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints for user registration and login"
    },
    {
      "name": "Game Sessions",
      "item": [
        {
          "name": "Start Game",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/games/{{userId}}/start",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "games",
                "{{userId}}",
                "start"
              ]
            },
            "description": "Start a new game session for the authenticated user"
          },
          "response": []
        },
        {
          "name": "Stop Game",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/games/{{userId}}/stop",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "games",
                "{{userId}}",
                "stop"
              ]
            },
            "description": "Stop an active game session and calculate the score"
          },
          "response": []
        },
        {
          "name": "Get User Games",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/games/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "games",
                "{{userId}}"
              ]
            },
            "description": "Get all games for a specific user"
          },
          "response": []
        }
      ],
      "description": "Game session management endpoints for starting and stopping timers"
    },
    {
      "name": "Leaderboard",
      "item": [
        {
          "name": "Get Top 10 Players",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/leaderboard",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "leaderboard"
              ]
            },
            "description": "Get the top 10 players with the smallest average time difference"
          },
          "response": []
        },
        {
          "name": "Get Detailed Leaderboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/leaderboard/detailed?limit=10&offset=0",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "leaderboard",
                "detailed"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "offset",
                  "value": "0"
                }
              ]
            },
            "description": "Get detailed leaderboard with pagination"
          },
          "response": []
        }
      ],
      "description": "Leaderboard endpoints for retrieving player rankings"
    },
    {
      "name": "Edge Cases",
      "item": [
        {
          "name": "Stop Game Without Starting",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/games/{{userId}}/stop",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "games",
                "{{userId}}",
                "stop"
              ]
            },
            "description": "Test error handling when stopping a game that wasn't started"
          },
          "response": []
        },
        {
          "name": "Access Another User's Game",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/games/different-user-id/start",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "games",
                "different-user-id",
                "start"
              ]
            },
            "description": "Test authorization when trying to access another user's game"
          },
          "response": []
        },
        {
          "name": "Invalid Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/games/{{userId}}/start",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "games",
                "{{userId}}",
                "start"
              ]
            },
            "description": "Test authentication with an invalid token"
          },
          "response": []
        }
      ],
      "description": "Test cases for edge scenarios and error handling"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    }
  ]
}
